name: Build

on:
  push:
    branches: [ "main", "develop", "release/**" ]


permissions:
  contents: read

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.6
        with:
          useConfigFile: true
          configFilePath: ./gitversion.yml
      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
  release:
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.version }}
          release_name: lemmypostbot-${{ needs.version.outputs.version }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}
  pypi:
   runs-on: ubuntu-latest
   needs: [version, release]
   env: 
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
   if: ${{ env.PYPI_API_TOKEN == '' }}
   steps:
     - name: Checkout
       uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - name: Find and Replace
       uses: jacobtomlinson/gha-find-replace@v3
       with:
         find: "{{VERSION_PLACEHOLDER}}"
         replace: "${{ needs.version.outputs.version }}"
         regex: false
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install -r requirements.txt
     - name: Install pypa/build
       run: >-
         python3 -m
         pip install
         build
         --user
     - name: Build a binary wheel and a source tarball
       run: python3 -m build
     - name: Publish package
       uses: pypa/gh-action-pypi-publish@release/v1
       with:
         password: ${{ env.PYPI_API_TOKEN }}
